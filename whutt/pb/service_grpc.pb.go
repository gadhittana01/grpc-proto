// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.9
// source: service.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// WhuttServiceClient is the client API for WhuttService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type WhuttServiceClient interface {
	GetUsers(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetUsersResp, error)
}

type whuttServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewWhuttServiceClient(cc grpc.ClientConnInterface) WhuttServiceClient {
	return &whuttServiceClient{cc}
}

func (c *whuttServiceClient) GetUsers(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetUsersResp, error) {
	out := new(GetUsersResp)
	err := c.cc.Invoke(ctx, "/pb.WhuttService/GetUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WhuttServiceServer is the server API for WhuttService service.
// All implementations must embed UnimplementedWhuttServiceServer
// for forward compatibility
type WhuttServiceServer interface {
	GetUsers(context.Context, *emptypb.Empty) (*GetUsersResp, error)
	mustEmbedUnimplementedWhuttServiceServer()
}

// UnimplementedWhuttServiceServer must be embedded to have forward compatible implementations.
type UnimplementedWhuttServiceServer struct {
}

func (UnimplementedWhuttServiceServer) GetUsers(context.Context, *emptypb.Empty) (*GetUsersResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUsers not implemented")
}
func (UnimplementedWhuttServiceServer) mustEmbedUnimplementedWhuttServiceServer() {}

// UnsafeWhuttServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to WhuttServiceServer will
// result in compilation errors.
type UnsafeWhuttServiceServer interface {
	mustEmbedUnimplementedWhuttServiceServer()
}

func RegisterWhuttServiceServer(s grpc.ServiceRegistrar, srv WhuttServiceServer) {
	s.RegisterService(&WhuttService_ServiceDesc, srv)
}

func _WhuttService_GetUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhuttServiceServer).GetUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.WhuttService/GetUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhuttServiceServer).GetUsers(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

// WhuttService_ServiceDesc is the grpc.ServiceDesc for WhuttService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var WhuttService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pb.WhuttService",
	HandlerType: (*WhuttServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUsers",
			Handler:    _WhuttService_GetUsers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
